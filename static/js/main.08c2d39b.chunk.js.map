{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","type","placeholder","onChange","handleChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAceA,MAVf,SAAcC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAG,wBAAmBL,EAAMG,QAAQG,QAChH,6BAAKN,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,Y,MCSfC,MAZf,SAAkBR,GACd,OACI,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,U,MCIxBO,MAXf,SAAmBX,GACf,OACI,uBACIY,KAAK,SACLX,UAAU,SACVY,YAAab,EAAMa,YACnBC,SAAUd,EAAMe,gBCqCbC,G,wDAtCX,aAAe,IAAD,8BACV,gBAcJD,aAAe,SAAAE,GACX,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACTb,SAAU,GACVU,YAAa,IALP,E,qDASd,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAArB,GAAO,OAAI,EAAKe,SAAS,CAACT,SAAUN,S,oBAOlD,WAAU,IAAD,EAE2BwB,KAAKL,MAA9Bb,EAFF,EAEEA,SAAUU,EAFZ,EAEYA,YACXS,EACFnB,EACCoB,QAAO,SAAA1B,GAAO,OAAIA,EAAQG,KAAKwB,cAAcC,SAASZ,EAAYW,kBAEvE,OACI,sBAAK7B,UAAU,MAAf,UACI,0CACA,cAAC,EAAD,CACIY,YAAY,qBACZE,aAAcY,KAAKZ,eACvB,cAAC,EAAD,CAAUN,SAAUmB,W,GAlClBI,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.08c2d39b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport \"./card.style.css\"\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt={`Monster Name: ${props.monster.name}`}/>\r\n            <h3>{props.monster.name}</h3>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\n\r\nimport Card from '../card/card.component'\r\n\r\nimport \"./card-list.style.css\"\r\n\r\nfunction CardList(props) {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {\r\n                props.monsters.map(monster => (\r\n                    <Card key={monster.id} monster={monster} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react'\r\n\r\nimport \"./search-box.style.css\"\r\n\r\nfunction SearchBox(props) {\r\n    return (\r\n        <input\r\n            type=\"search\"\r\n            className=\"search\"\r\n            placeholder={props.placeholder}\r\n            onChange={props.handleChange}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React, {Component} from 'react'\n\nimport CardList from './components/card-list/card-list.component'\nimport SearchBox from './components/search-box/search-box.component'\n\nimport './App.css';\n\nclass App extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            monsters: [],\n            searchField: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then(response => response.json())\n            .then(monster => this.setState({monsters: monster}))\n    }\n\n    handleChange = e => {\n        this.setState({searchField: e.target.value})\n    }\n\n    render() {\n\n        const {monsters, searchField} = this.state;\n        const filteredMonsters =\n            monsters\n            .filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n\n        return (\n            <div className=\"App\">\n                <h1>Monsters</h1>\n                <SearchBox\n                    placeholder=\"Search Monsters...\"\n                    handleChange={this.handleChange}/>\n                <CardList monsters={filteredMonsters}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}